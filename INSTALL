1. Building
1.1 libaard
1.2 Building with gcc and compatible
1.3 Building with Borland C

1.1 libaard
-----------

The current version of aardmail relies on libaard. An appropriate
version is included as a git submodule, which you can initialize
by executing the following command within the source directory:

    git submodule update --init

If you already got the initialized submodule, but would like to
jump to a newer release execute the above command without the --init

If you're building from a release tarball a version of libaard is
already included.

1.2 Building with gcc and compatible
------------------------------------

Type make, specifying options using the following variables:

SSL=0|1
        Enable/Disable SSL-Support and link against OpenSSL (or any
        compatible library). Default is 1.
DEBUG=0|1
        Do a debug build and don't strip binaries. Default is 0.
WIN32=0|1
        Build for Windows. Adds .exe to the binaries and links to
        libws2_32, libwsock32 and libgdi32
CROSS=
        Crosscompile by prefixing the toolchain with CROSS. Example:
        make CROSS=i386-pc-mingw32-
DIET=
        Set to the dietwrapper if you want to link against dietlibc

GNU make and BSD make are supported. On platforms shipping a prehistoric
make (like Solaris) you'll need to have gmake installed.

To create windows binaries using mingw you'd do something like
# make CROSS=i386-mingw32-  WIN32=1

On debian-based distributions you can get a .deb package with 'make deb',
on RPM based distributions you'll get an RPM with 'make rpm'.

1.3 Building with Borland C
---------------------------

Type `make -f Makefile.borland'.

If you want to enable SSL
- get the nasm-assembler (nasmw.exe) and put it in your path
- get the OpenSSL-sources from http://www.openssl.org
- make sure you have perl in your path
- create the makefile with perl Configure BCC-32
- compile with make -f ./
- copy the includes from i32 to Include/openssl of your BCC installation
  (make sure you don't copy the links -- -b switch to cp)
- copy *.lib of the lib directory to Lib of your BCC installation
- compile aardmail with make -DSSL -f Makefile.borland

2. Installing
-------------

Type `Make install', specifying options using environement varibles:

BINDIR=
        The directory to put binaries into, default is /usr/bin
DESTDIR=
        A prefix added to all installation pathnames, useful for
        creating packages
