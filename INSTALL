1. Building
1.1 Building with gcc and compatible
1.2 Building with Borland C

1.1 Building with gcc and compatible
------------------------------------

Just type `make', specifying options using environement variables:

SSL=0|1
	Enable/Disable SSL-Support and link against OpenSSL (or any 
	compatible library). Default is 0.
DEBUG=0|1
	Do a debug build and don't strip binaries. Default is 0.
WIN32=0|1
	Build for Windows. Adds .exe to the binaries and links to 
	libws2_32, libwsock32 and libgdi32
CROSS=
	Crosscompile by prefixing the toolchain with CROSS. Example:
	make CROSS=i386-pc-mingw32-
DIET=
	Set to the dietwrapper if you want to link against dietlibc

1.2 Building with Borland C
---------------------------

Type `make -f Makefile.borland'.

If you want to enable SSL
- get the nasm-assembler (nasmw.exe) and put it in your path
- get the OpenSSL-sources from http://www.openssl.org
- make sure you have perl in your path
- create the makefile with perl Configure BCC-32
- compile with make -f ./
- copy the includes from i32 to Include/openssl of your BCC installation
  (make sure you don't copy the links -- -b switch to cp)
- copy *.lib of the lib directory to Lib of your BCC installation
- compile aardmail with make -DSSL -f Makefile.borland

2. Installing
-------------

Type `Make install', specifying options using environement varibles:

BINDIR=
	The directory to put binaries into, default is /usr/bin
DESTDIR=
	A prefix added to all installation pathnames, useful for 
	creating packages
	
